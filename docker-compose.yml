version: '2.0'
networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: bonial/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro   
      - /var/run:/var/run:ro   
      - /sys:/sys:ro   
      - /var/lib/docker/:/var/lib/docker:ro   
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: bonial/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
  
  ruby:
    image: optimum/rubyloop
    container_name: rubyLoop
    restart: unless-stopped
    ports:
      - "2345:2345"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"